{
  "apiconfig import": {
    "scope": "typescript",
    "prefix": "apii",
    "body": [
      "import * as z from 'zod';",
      "import { transformPath, APIConfig, ObjectLiteral } from '@/src/shared/tsdk-helper';"
    ],
    "description": "api config import snippet"
  },
  "apiconf": {
    "scope": "typescript",
    "prefix": "apic",
    "body": [
      "",
      "/**",
      " * ${1:description} ({@link APIConfig})",
      " * @category ${3:Category}",
      " */",
      "export const ${2:ApiName}Config: APIConfig = {",
      "  type: '${4:user}',",
      "  method: '${5|get,post,delete,put,patch,head,options|}',",
      "  path: transformPath('${2:ApiName}'),",
      "  description: '${1:description}',",
      "  category: '${3:Category}'",
      "};",
      "/**",
      " *",
      " * @category ${3:Category}",
      " */",
      "export type ${2:ApiName}Req = ${8:{}};",
      "",
      "/**",
      " *",
      " * @category ${3:Category}",
      " */",
      "export type ${2:ApiName}Res = ${9:{}};",
      "// --------- ${2:ApiName} END ---------",
      ""
    ],
    "description": "api config snippet"
  },
  "simple apiconf": {
    "prefix": "sapic",
    "body": [
      "/**",
      " * ${5:Description} ({@link APIConfig})",
      " * @category ",
      " */",
      "export const ${1:ApiName}Config: APIConfig = {",
      "  // type: 'user',",
      "  method: '${2|get,post,delete,put,patch,head,options|}',",
      "  path: transformPath('${1:ApiName}'),",
      "};",
      "/**",
      " * @category ",
      " */",
      "export type ${1:ApiName}Req = {${3}};",
      "",
      "/**",
      " * @category ",
      " */",
      "export type ${1:ApiName}Res = {${4}};",
      "// --------- ${1:ApiName} END ---------"
    ],
    "description": "API Config snippet but more simple"
  },
  "importApiConf": {
    "scope": "typescriptreact,typescript",
    "prefix": "apin",
    "body": [
      "${1:name}Config,",
      "${1:name}Req,",
      "${1:name}Res,"
    ],
    "description": "api config name snippet"
  },
  "genRoute": {
    "scope": "typescript",
    "prefix": "genr",
    "body": [
      "genRoute<${1:name}Req, ${1:name}Res>(${1:name}Config, async (data, reqInfo) => {",
      "  return ${2://service}(data, reqInfo);",
      "});"
    ],
    "description": "genRoute<Req, Res>() snippet"
  }
}